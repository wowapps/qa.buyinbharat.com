{"version":3,"sources":["config/config.js","Pages/Home/home.js","Pages/pageNotFound/pageNotFound.js","routes/routes.js","App.js","serviceWorker.js","index.js"],"names":["url","Home","useState","isInput","setInput","country","setCountry","selectedBrand","setBrand","selectedProduct","setProduct","brandFilter","setBrandFilter","brands","setBrandsIndex","urlToShare","useEffect","length","fetch","then","res","json","data","className","type","placeholder","value","name","onChange","e","target","text","toLowerCase","brand","substr","push","autoComplete","autoFocus","map","i","key","onClick","alias","selectBrand","src","alt","toUpperCase","groups","references","ref","rel","href","role","aria-label","TwitterShareButton","TwitterIcon","size","EmailShareButton","EmailIcon","WhatsappShareButton","WhatsappIcon","FacebookShareButton","FacebookIcon","LinkedinShareButton","LinkedinIcon","RedditShareButton","RedditIcon","TelegramShareButton","TelegramIcon","NoMatch","Routes","exact","path","About","Dashboard","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.29f42498.chunk.js","sourcesContent":["export const url = {\n    baseUrl: 'https://buyinbharat.com/',\n    brandsArray : 'data-store/index.json'\n}","import React from \"react\";\nimport { url } from '../../config/config';\nimport './home.css';\nimport { useEffect, useState } from 'react';\nimport {\n  EmailShareButton,\n  EmailIcon,\n  FacebookShareButton,\n  FacebookIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n  LinkedinShareButton,\n  LinkedinIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon\n} from \"react-share\";\n\n\nexport default function Home() {\n    const [isInput, setInput] = useState(false);\n    const [country, setCountry] = useState('');\n    const [selectedBrand, setBrand] = useState('');\n    const [selectedProduct, setProduct] = useState('');\n    const [brandFilter, setBrandFilter] = useState([]);\n    const [brands, setBrandsIndex] = useState([]);\n    const [urlToShare] = useState('https://buyinbharat.com')\n\n    useEffect(() => {\n        if (brands.length <= 0) {\n        fetch(url.baseUrl + url.brandsArray).then(\n            res => res.json()\n        ).then((data) => {\n            setBrandsIndex(data);\n        })\n        }\n    });\n  \n    return (\n      <div>\n         <div className='row searchbar'>\n        <div className=\"col-sm-12 col-md-6\">\n          <div className=\"row\">\n            <span className=\"float-right\">किस देश का उत्पाद है?</span>\n          </div>\n          <div className='row'>\n            <span className=\"float-right\">Which country's brand is?</span>\n          </div>\n        </div>\n        <div className=\"col-sm-12 col-md-6\">\n          <input type=\"text\" placeholder='खोजें/Search' className=\"search_input\" value={selectedProduct} name=\"search\" onChange={findProduct} autoComplete=\"off\" autoFocus=\"\" />\n        </div>\n      </div>\n      {isInput ? <div>\n        <ul className='list'>\n          {\n            brandFilter.length > 0 ? <div>\n              {brandFilter.map((brand, i) => {\n                return (\n                  <li key={i}>\n                    <button value={brand} onClick={(e) => selectBrand(e)}>\n                      {brand}\n                    </button>\n                  </li>\n                )\n              }\n              )}\n            </div> :\n              <li className='notListed'>Not Listed</li>\n          }\n        </ul>\n      </div> : ''}\n      <div className={`row main-content ${country ? 'active' : 'inactive'}`}>\n\n<div className=\"col-sm-12 col-md-3 offset-md-2\">\n  <div className=\"card\">\n    {\n      country === 'india' ?\n        <img className=\"card-img-top\" src=\"./india-flag.svg\" alt=\"Made In India\" />\n        :\n        (country === 'china' ?\n          <img className=\"card-img-top\" src=\"./china-flag.svg\" alt=\"Made In India\" />\n          :\n          <img className=\"card-img-top\" src=\"./somalia-flag.svg\" alt=\"Made In India\" />\n        )\n    }\n    <div className=\"card-body\">\n      <p className=\"card-text\">{`${country === 'india' ? 'भारत' : (country === 'china' ? 'चीन' : 'अन्य देश')} का उत्पाद`}</p>\n      <p className=\"card-text\">{`Brand of ${country.toUpperCase()}`}</p>\n    </div>\n  </div>\n</div>\n<div className=\"col-sm-12 col-md-5\">\n  <div className=\"card\">\n    <div className=\"card-body\">\n      <p className=\"card-text\"><b>Company</b></p>\n      <p className=\"card-text\">{`${selectedBrand.brand}`}</p>\n      <p className=\"card-text\"><b>श्रेणी/Category</b></p>\n      <p className=\"card-text\">{`${selectedBrand.groups}`}</p>\n      <p className=\"card-text\"><b>संदर्भ/References</b></p>\n      <p className=\"card-body\">\n        {selectedBrand && 'references' in selectedBrand && selectedBrand.references.length > 0 ?\n          <ul>{selectedBrand.references.map(ref => {\n            return (<li><a target=\"_blank\" rel=\"noopener noreferrer\" href={ref}>{ref}</a></li>)\n          })}</ul>\n          : ''}\n      </p>\n    </div>\n  </div>\n</div>\n\n</div>\n<div className=\"container\">\n        <div className=\"btn-group-vertical\" role=\"group\" aria-label=\"Button group with nested dropdown\">\n          <button type=\"button\" className=\"btn btn-secondary\">\n            <a className=\"footer-link\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSd4NnHXtvv7DpY93-6ZcwUk1tkvL78eT6tSyDNDdT3lY2j0hw/viewform\" target=\"_blank\" rel=\"noopener noreferrer\">किसी भी गलत जानकारी की सूचना दें (Report any incorrect data)</a>\n          </button>\n          <button type=\"button\" className=\"btn btn-secondary\">\n            <a className=\"footer-link\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSfOLjHq0Crnm_6izV9N2WNO9NP9DwYttsZKg9Iqa3j-a5LYOA/viewform\" target=\"_blank\" rel=\"noopener noreferrer\">कंपनी / उत्पाद जोड़ने का अनुरोध (Company/Product add request)</a>\n          </button>\n          <button type=\"button\" className=\"btn btn-secondary\">\n            <a className=\"footer-link\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSfckly2X5CcO-1cEKMBVWDJtJZvjrPW3ivaBb3zvHCCm3bbmg/viewform\" target=\"_blank\" rel=\"noopener noreferrer\">सुझाव या शिकायत दर्ज करें (Suggestions or Complaints)</a>\n          </button>\n        </div>\n      </div>\n      <br/>\n          \n          <TwitterShareButton url={urlToShare}  className='share-button'>\n            <TwitterIcon size={32} />\n          </TwitterShareButton>\n          <EmailShareButton url={urlToShare}  className='share-button'>\n            <EmailIcon size={32} />\n          </EmailShareButton>\n          <WhatsappShareButton url={urlToShare}  className='share-button'>\n            <WhatsappIcon size={32} />\n          </WhatsappShareButton>\n          <FacebookShareButton url={urlToShare} className='share-button' >\n            <FacebookIcon size={32} />\n          </FacebookShareButton>\n          <LinkedinShareButton url={urlToShare}  className='share-button'>\n            <LinkedinIcon size={32} />\n          </LinkedinShareButton>\n          <RedditShareButton url={urlToShare}  className='share-button'>\n            <RedditIcon size={32} />\n          </RedditShareButton>\n          <TelegramShareButton url={urlToShare}  className='share-button'>\n            <TelegramIcon size={32} />\n          </TelegramShareButton>\n      </div>\n    );\n\n    function selectBrand(e) {\n        setProduct(e.target.value);\n        fetch(url.baseUrl + \"data-store/brand-\" + e.target.value.toLowerCase() + \".json\").then(\n          res => res.json()\n        ).then((data) => {\n          if (data.alias !== \"\") {\n            fetch(url.baseUrl + \"data-store/brand-\" + data.alias.toLowerCase() + \".json\").then(\n              res => res.json()\n            ).then(\n              data => {\n                setBrand(data);\n                setCountry(data.country);\n              }\n            )\n          } else {\n            setBrand(data);\n            setCountry(data.country);\n          }\n        })\n        setInput(false);\n      }\n      function findProduct(e) {\n        let brandFilter = [];\n        if (e.target.value) {\n          setInput(true);\n          setCountry('');\n          setProduct(e.target.value);\n        } else {\n          setInput(false);\n          setProduct('');\n        }\n        let text = e.target.value.toLowerCase();\n        for (let brand of brands) {\n          if (text === brand.substr(0, text.length)) {\n            brandFilter.push(brand);\n          }\n        }\n        setBrandFilter(brandFilter);\n      }\n  }","import React from 'react';\nimport './pageNotFound.css';\n\nfunction NoMatch() {\n    return (\n      <div>\n        <h1 className='message'>404 - Uh, page not Found</h1>\n      </div>\n    );\n  }\n\nexport default NoMatch;","import React from \"react\";\nimport Home from '../Pages/Home/home';\nimport NoMatch from '../Pages/pageNotFound/pageNotFound';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nexport default function Routes() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"*\">\n            <NoMatch />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction About() {\n  return (\n    <div>\n    </div>\n  );\n}\n\nfunction Dashboard() {\n  return (\n    <div>\n    </div>\n  );\n}\n\n\n","import React from 'react';\nimport Routes from './routes/routes';\n\nfunction App() {\n\n  return (\n    <div className='container-fluid'>\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}