{"version":3,"sources":["assets/images/india-flag.svg","assets/images/china-flag.svg","assets/images/somalia-flag.svg","config/config.js","Pages/Home/home.js","Pages/pageNotFound/pageNotFound.js","routes/routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","url","Home","props","useState","isFindProduct","setFindProduct","isInput","setInput","country","setCountry","selectedBrand","setBrand","selectedProduct","setProduct","brandFilter","setBrandFilter","brands","setBrandsIndex","urlToShare","useEffect","length","fetch","then","res","json","data","e","target","search","findProduct","selectBrand","className","onClick","routerProps","history","replace","type","placeholder","value","toUpperCase","slice","name","onChange","autoComplete","autoFocus","map","brand","i","key","src","IndiaFlag","alt","ChinaFlag","SomaliaFlag","groups","references","ref","rel","href","role","aria-label","TwitterShareButton","TwitterIcon","size","EmailShareButton","EmailIcon","WhatsappShareButton","WhatsappIcon","FacebookShareButton","FacebookIcon","LinkedinShareButton","LinkedinIcon","RedditShareButton","RedditIcon","TelegramShareButton","TelegramIcon","toLowerCase","alias","text","substr","push","NoMatch","Routes","exact","path","component","render","match","params","renderBrands","App","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b07cb70e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/india-flag.0d5c77d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/china-flag.8a14d780.svg\";","module.exports = __webpack_public_path__ + \"static/media/somalia-flag.922aa20b.svg\";","export const url = {\n    baseUrl: 'https://buyinbharat.com/',\n    brandsArray : 'data-store/index.json'\n}","import React from \"react\";\nimport { url } from '../../config/config';\nimport './home.css';\nimport { useEffect, useState } from 'react';\nimport {\n  EmailShareButton,\n  EmailIcon,\n  FacebookShareButton,\n  FacebookIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n  LinkedinShareButton,\n  LinkedinIcon,\n  RedditShareButton,\n  RedditIcon,\n  TelegramShareButton,\n  TelegramIcon\n} from \"react-share\";\nimport IndiaFlag from '../../assets/images/india-flag.svg';\nimport ChinaFlag from '../../assets/images/china-flag.svg';\nimport SomaliaFlag from '../../assets/images/somalia-flag.svg';\n\n\nexport default function Home(props) {\n  const [isFindProduct, setFindProduct] = useState(false);\n  const [isInput, setInput] = useState(false);\n  const [country, setCountry] = useState('');\n  const [selectedBrand, setBrand] = useState('');\n  const [selectedProduct, setProduct] = useState('');\n  const [brandFilter, setBrandFilter] = useState([]);\n  const [brands, setBrandsIndex] = useState([]);\n  const [urlToShare] = useState('https://buyinbharat.com')\n\n  useEffect(() => {\n    if (brands.length <= 0) {\n      fetch(url.baseUrl + url.brandsArray).then(\n        res => res.json()\n      ).then((data) => {\n        setBrandsIndex(data);\n      })\n    }\n    let e = {};\n    e = {target:{}}\n    e['target']['value'] = props.search;\n    if(!isFindProduct){\n      setFindProduct(true);\n      findProduct(e);\n    }\n    if(isInput && isFindProduct && props && 'search' in props && props.search){\n      selectBrand(e);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className='container-fluid'>\n      <div className='row searchbar'>\n        <div className=\"col-sm-12 col-md-6\">\n          <div className=\"row\">\n            <span className=\"float-right\">किस देश का उत्पाद है?</span>\n          </div>\n          <div className='row'>\n            <span className=\"float-right\">Which country's brand is?</span>\n          </div>\n        </div>\n        <div className=\"col-sm-12 col-md-6\">\n          {props && 'search' in props && props.search ?\n          <button onClick={gotoHome} className='btn btn-primary'>Search</button>\n          :\n          <input type=\"text\" placeholder='खोजें/Search' className=\"search_input\" value={selectedProduct && (selectedProduct[0].toUpperCase() + selectedProduct.slice(1,))} name=\"search\" onChange={e => findProduct(e)} autoComplete=\"off\" autoFocus=\"\" />\n        }</div>\n      </div>\n      {isInput ? <div>\n        <ul className='list'>\n          {\n            brandFilter.length > 0 ? <div>\n              {brandFilter.map((brand, i) => {\n                return (\n                  <li key={i}>\n                    <button value={brand} onClick={(e) => selectBrand(e)}>\n                      {`${brand.slice(0, 1).toUpperCase()}${brand.slice(1,)}`}\n                    </button>\n                  </li>\n                )\n              }\n              )}\n            </div> :\n              ''\n          }\n        </ul>\n      </div> : ''}\n      <div className={`row main-content ${country ? 'active' : 'inactive'}`}>\n        <div className=\"col-sm-12 col-md-3 offset-md-2\">\n          <div className=\"card\">\n            {\n              country === 'india' ?\n                <img className=\"card-img-top\" src={IndiaFlag} alt=\"IndiaFlag\" />\n                :\n                (country === 'china' ?\n                  <img className=\"card-img-top\" src={ChinaFlag} alt=\"ChinaFlag\" />\n                  :\n                  <img className=\"card-img-top\" src={SomaliaFlag} alt=\"WorldFlag\" />\n                )\n            }\n            <div className=\"card-body\">\n              <p className=\"card-text\">{`${country === 'india' ? 'भारत' : (country === 'china' ? 'चीन' : 'अन्य देश')} का उत्पाद`}</p>\n              <p className=\"card-text\">{`Brand of ${country.toUpperCase()}`}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-sm-12 col-md-5\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <p className=\"card-text\"><b>Company</b></p>\n              {selectedBrand.brand && <p className=\"card-text\">{`${selectedBrand.brand.slice(0, 1).toUpperCase()}${selectedBrand.brand.slice(1,)}`}</p>}\n              <p className=\"card-text\"><b>श्रेणी/Category</b></p>\n              <p className=\"card-text\">{`${selectedBrand.groups}`}</p>\n              <p className=\"card-text\"><b>संदर्भ/References</b></p>\n              <p className=\"card-body\">\n                {selectedBrand && 'references' in selectedBrand && selectedBrand.references.length > 0 ?\n                  <ul>{selectedBrand.references.map(ref => {\n                    return (<li><a target=\"_blank\" rel=\"noopener noreferrer\" href={ref}>{ref}</a></li>)\n                  })}</ul>\n                  : ''}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"btn-group-vertical\" role=\"group\" aria-label=\"Button group with nested dropdown\">\n          <button type=\"button\" className=\"btn btn-secondary\">\n            <a className=\"footer-link\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSd4NnHXtvv7DpY93-6ZcwUk1tkvL78eT6tSyDNDdT3lY2j0hw/viewform\" target=\"_blank\" rel=\"noopener noreferrer\">किसी भी गलत जानकारी की सूचना दें (Report any incorrect data)</a>\n          </button>\n          <button type=\"button\" className=\"btn btn-secondary\">\n            <a className=\"footer-link\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSfOLjHq0Crnm_6izV9N2WNO9NP9DwYttsZKg9Iqa3j-a5LYOA/viewform\" target=\"_blank\" rel=\"noopener noreferrer\">कंपनी / उत्पाद जोड़ने का अनुरोध (Company/Product add request)</a>\n          </button>\n          <button type=\"button\" className=\"btn btn-secondary\">\n            <a className=\"footer-link\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSfckly2X5CcO-1cEKMBVWDJtJZvjrPW3ivaBb3zvHCCm3bbmg/viewform\" target=\"_blank\" rel=\"noopener noreferrer\">सुझाव या शिकायत दर्ज करें (Suggestions or Complaints)</a>\n          </button>\n        </div>\n      </div>\n      <br />\n      <TwitterShareButton url={urlToShare} className='share-button'>\n        <TwitterIcon size={32} />\n      </TwitterShareButton>\n      <EmailShareButton url={urlToShare} className='share-button'>\n        <EmailIcon size={32} />\n      </EmailShareButton>\n      <WhatsappShareButton url={urlToShare} className='share-button'>\n        <WhatsappIcon size={32} />\n      </WhatsappShareButton>\n      <FacebookShareButton url={urlToShare} className='share-button' >\n        <FacebookIcon size={32} />\n      </FacebookShareButton>\n      <LinkedinShareButton url={urlToShare} className='share-button'>\n        <LinkedinIcon size={32} />\n      </LinkedinShareButton>\n      <RedditShareButton url={urlToShare} className='share-button'>\n        <RedditIcon size={32} />\n      </RedditShareButton>\n      <TelegramShareButton url={urlToShare} className='share-button'>\n        <TelegramIcon size={32} />\n      </TelegramShareButton>\n    </div>\n  );\n\n  function gotoHome(){\n    props.routerProps.history.replace('/')\n\n  }\n\n  function selectBrand(e) {\n    setProduct(e.target.value);\n    fetch(url.baseUrl + \"data-store/brand-\" + e.target.value.toLowerCase() + \".json\").then(\n      res => res.json()\n    ).then((data) => {\n      if (data.alias !== \"\") {\n        fetch(url.baseUrl + \"data-store/brand-\" + data.alias.toLowerCase() + \".json\").then(\n          res => res.json()\n        ).then(\n          data => {\n            setBrand(data);\n            setCountry(data.country);\n          }\n        )\n      } else {\n        setBrand(data);\n        setCountry(data.country);\n      }\n    })\n    setInput(false);\n  }\n\n  function findProduct(e) {\n    let brandFilter = [];\n    let text = '';\n    if (e.target.value) {\n      text = e.target.value.toLowerCase();\n      setInput(true);\n      setCountry('');\n      setProduct(e.target.value);\n    } else {\n      setInput(false);\n      setProduct('');\n    }\n    \n    for (let brand of brands) {\n      if (text === brand.substr(0, text.length)) {\n        brandFilter.push(brand);\n      }\n    }\n    setBrandFilter(brandFilter);\n  }\n\n}","import React from 'react';\nimport './pageNotFound.css';\n\nfunction NoMatch() {\n    return (\n      <div>\n        <h1 className='message'>404 - Uh, page not Found</h1>\n      </div>\n    );\n  }\n\nexport default NoMatch;","import React from \"react\";\nimport Home from '../Pages/Home/home';\nimport NoMatch from '../Pages/pageNotFound/pageNotFound';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/brands/:value\" render = {routerProps => renderBrands(routerProps)} /> \n        <Route path=\"*\" component={NoMatch} />\n      </Switch>\n    </Router>\n  );\n\n  function renderBrands (routerProps) {\n    if(routerProps.match.params.value){\n      return <Home routerProps={routerProps} search={routerProps.match.params.value} />\n    }\n  }\n}\n\nexport default Routes;\n\n","import React from 'react';\nimport Routes from './routes/routes';\n\nfunction App() {\n\n  return (\n    <div>\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}